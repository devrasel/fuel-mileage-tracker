generator client {
  provider = "prisma-client-js"
  log      = ["warn", "error"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(cuid())
  email            String            @unique
  name             String?
  passwordHash     String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  fuelEntries      FuelEntry[]
  maintenanceCosts MaintenanceCost[]
  settings         Settings?
  vehicles         Vehicle[]
  securityQuestions SecurityQuestion[]
}

model Vehicle {
  id               String            @id @default(cuid())
  name             String
  make             String?
  model            String?
  year             Int?
  licensePlate     String?
  color            String?
  isActive         Boolean           @default(true)
  displayOrder     Int               @default(0)
  userId           String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  fuelEntries      FuelEntry[]
  maintenanceCosts MaintenanceCost[]
  user             User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FuelEntry {
  id           String      @id @default(cuid())
  date         DateTime
  odometer     Float
  liters       Float
  costPerLiter Float
  totalCost    Float
  fuelType     String      @default("FULL")
  location     String?
  notes        String?
  parentEntry  String?
  odometerExtraKm Float?   @default(0)
  vehicleId    String
  userId       String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  parent       FuelEntry?  @relation("FuelPartialEntries", fields: [parentEntry], references: [id])
  partials     FuelEntry[] @relation("FuelPartialEntries")
  vehicle      Vehicle     @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MaintenanceCost {
  id          String   @id @default(cuid())
  date        DateTime
  description String
  cost        Float
  category    String
  odometer    Float?
  location    String?
  notes       String?
  vehicleId   String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  vehicle     Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SecurityQuestion {
  id           String @id @default(cuid())
  question     String
  answerHash   String
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, question])
}

model Settings {
  id             String   @id @default(cuid())
  currency       String   @default("BDT")
  dateFormat     String   @default("MM/DD/YYYY")
  distanceUnit   String   @default("km")
  volumeUnit     String   @default("L")
  entriesPerPage Int      @default(10)
  timezone       String   @default("Asia/Dhaka")
  userId         String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
